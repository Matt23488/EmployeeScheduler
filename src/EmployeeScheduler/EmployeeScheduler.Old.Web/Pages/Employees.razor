@page "/employees"
@using Lib.Extensions

<h1>Employee Management</h1>

@if (EmployeeList == null)
{
    <p>
        <em>Loading employees...</em>
    </p>
}
else
{
    if (EmployeeList.Count == 0)
    {
        <p class="text-info">
            <em>No employees. Click below to add one!</em>
        </p>
    }
    else
    {
        <div class="list-group mb-3">
            @foreach (var employee in EmployeeList)
            {
                <a href="employee/@employee.ID" class="list-group-item list-group-item-action @(employee.Active ? "" : "list-group-item-secondary")">
                    <i class="oi oi-person"></i>
                    @employee.FormattedName()
                    @if (!employee.Active)
                    {
                        <div class="text-danger float-right">
                            <i class="oi oi-ban"></i>
                        </div>
                    }
                </a>
            }
        </div>
    }
    <a class="btn btn-primary" href="employee"><span class="oi oi-plus"></span> Add New Employee</a>
}

@inject Lib.Services.ISchedulingService SchedulingService
@code {
    public List<Lib.DTO.Employee> EmployeeList { get; private set; }

    protected override async Task OnInitializedAsync()
    {
        EmployeeList = await SchedulingService.GetEmployeesAsync(includeDeleted: true);
    }
}